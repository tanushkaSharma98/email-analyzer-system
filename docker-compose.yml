version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: email-analyzer-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: email-analyzer
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - email-analyzer-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: email-analyzer-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/email-analyzer?authSource=admin
      IMAP_HOST: ${IMAP_HOST:-imap.gmail.com}
      IMAP_PORT: ${IMAP_PORT:-993}
      IMAP_USER: ${IMAP_USER}
      IMAP_PASS: ${IMAP_PASS}
      PORT: 3001
      FRONTEND_URL: http://localhost:3000
    depends_on:
      - mongodb
    networks:
      - email-analyzer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/emails/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: email-analyzer-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:3001
    depends_on:
      - backend
    networks:
      - email-analyzer-network

volumes:
  mongodb_data:

networks:
  email-analyzer-network:
    driver: bridge
